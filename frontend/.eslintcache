[{"/home/agl/Gits/orulo/frontend/src/index.js":"1","/home/agl/Gits/orulo/frontend/src/pages/home.jsx":"2","/home/agl/Gits/orulo/frontend/src/assets/styles/pages/home.jsx":"3","/home/agl/Gits/orulo/frontend/src/assets/styles/base.jsx":"4","/home/agl/Gits/orulo/frontend/src/components/customDrawer.jsx":"5","/home/agl/Gits/orulo/frontend/src/assets/styles/components/customDrawer.jsx":"6","/home/agl/Gits/orulo/frontend/src/pages/login.jsx":"7","/home/agl/Gits/orulo/frontend/src/libs/authService.js":"8","/home/agl/Gits/orulo/frontend/src/assets/styles/pages/login.jsx":"9","/home/agl/Gits/orulo/frontend/src/libs/handleStorage.js":"10","/home/agl/Gits/orulo/frontend/src/pages/signup.jsx":"11","/home/agl/Gits/orulo/frontend/src/components/panelSliders.jsx":"12","/home/agl/Gits/orulo/frontend/src/assets/styles/components/panelSliders.jsx":"13","/home/agl/Gits/orulo/frontend/src/libs/oruloAPI.js":"14","/home/agl/Gits/orulo/frontend/src/env.js":"15","/home/agl/Gits/orulo/frontend/src/assets/data/slider.js":"16","/home/agl/Gits/orulo/frontend/src/components/customCard.jsx":"17","/home/agl/Gits/orulo/frontend/src/pages/favorites.jsx":"18","/home/agl/Gits/orulo/frontend/src/components/panelFavorites.jsx":"19"},{"size":578,"mtime":1609624062058,"results":"20","hashOfConfig":"21"},{"size":1230,"mtime":1609721584268,"results":"22","hashOfConfig":"21"},{"size":2047,"mtime":1609682337339,"results":"23","hashOfConfig":"21"},{"size":98,"mtime":1609689106439,"results":"24","hashOfConfig":"21"},{"size":4785,"mtime":1609721505036,"results":"25","hashOfConfig":"21"},{"size":2063,"mtime":1609702049493,"results":"26","hashOfConfig":"21"},{"size":3523,"mtime":1609730232310,"results":"27","hashOfConfig":"21"},{"size":2004,"mtime":1609730027475,"results":"28","hashOfConfig":"21"},{"size":1353,"mtime":1609691210386,"results":"29","hashOfConfig":"21"},{"size":846,"mtime":1609724826577,"results":"30","hashOfConfig":"21"},{"size":3446,"mtime":1609730242510,"results":"31","hashOfConfig":"21"},{"size":3202,"mtime":1609728565711,"results":"32","hashOfConfig":"21"},{"size":738,"mtime":1609729125534,"results":"33","hashOfConfig":"21"},{"size":894,"mtime":1609729149285,"results":"34","hashOfConfig":"21"},{"size":104,"mtime":1609703891716,"results":"35","hashOfConfig":"21"},{"size":227,"mtime":1609706473402,"results":"36","hashOfConfig":"21"},{"size":4906,"mtime":1609729042502,"results":"37","hashOfConfig":"21"},{"size":1178,"mtime":1609721915157,"results":"38","hashOfConfig":"21"},{"size":1739,"mtime":1609728608462,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1myr9du",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"42"},"/home/agl/Gits/orulo/frontend/src/index.js",[],["87","88"],"/home/agl/Gits/orulo/frontend/src/pages/home.jsx",["89"],"import React from 'react';\nimport clsx from 'clsx';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport { homeStyle } from \"../assets/styles/pages/home\"\nimport CustomDrawer from \"../components/customDrawer\"\nimport Login from \"./login\"\nimport Signup from \"./signup\"\nimport Favorites from \"./favorites\"\n\nexport default function Home() {\n  const classes = homeStyle();\n  const [open, setOpen] = React.useState(false);\n  const hook = {\n    open: open,\n    handleDrawerOpen: () => {\n      setOpen(true);\n    },\n    handleDrawerClose: () => {\n      setOpen(false);\n    },\n  }\n\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/signup\" component={Signup} />\n        <Route path=\"/favorites\" component={Favorites} />\n        <Route path=\"/\">\n          <div className={classes.root}>\n            <CustomDrawer hook={hook} usePanelSlider={true} />\n          <main\n            className={clsx(classes.content, {\n              [classes.contentShift]: open,\n            })}\n          >\n            {/* <div className={classes.drawerHeader} /> */}\n            </main>\n          </div>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}","/home/agl/Gits/orulo/frontend/src/assets/styles/pages/home.jsx",[],"/home/agl/Gits/orulo/frontend/src/assets/styles/base.jsx",[],"/home/agl/Gits/orulo/frontend/src/components/customDrawer.jsx",["90"],"import React from 'react';\nimport clsx from 'clsx';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport HomeIcon from '@material-ui/icons/Home';\nimport {\n  Link\n} from \"react-router-dom\";\n\nimport { customDrawerStyle, useTheme } from \"../assets/styles/components/customDrawer\"\nimport logo from \"../assets/img/orulo_logo.png\"\nimport HandleStorage from '../libs/handleStorage';\nimport PanelSlider from \"./panelSliders\"\nimport PanelFavorites from \"./panelFavorites\"\n\nexport default function CustomDrawer({hook, usePanelSlider, usePanelFavorites}) {\n  const classes = customDrawerStyle();\n  const theme = useTheme();\n  const user = HandleStorage.getStorage()[\"user\"]\n\n  return (\n    <div className={classes.root}>\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: hook.open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={hook.handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, hook.open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Ã“rulo\n          </Typography>\n        </Toolbar>\n      { usePanelSlider && <PanelSlider /> }\n      { usePanelFavorites && <PanelFavorites /> }\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={hook.open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <Grid \n          container\n          direction=\"column\"\n          justify=\"space-between\"\n          spacing={1}\n          className={classes.gridContainer}\n          >\n          <Grid item xs={2} className={classes.gridDrawerHeader}>\n            <div className={classes.drawerHeader}>\n              <img src={logo} alt=\"Logo\" className={classes.logo} />\n              <IconButton onClick={hook.handleDrawerClose}>\n                {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n              </IconButton>\n            </div>\n          </Grid>\n          <Grid item xs={6}>\n            <Divider className={classes.divider}/>\n            <List>\n              {['Home', 'Favorites'].map((text, index) => (\n                index % 2 === 0 ?\n                <Link to=\"/\">\n                  <ListItem button key={text}>\n                    <ListItemIcon><HomeIcon /></ListItemIcon>\n                    <ListItemText primary={text} />\n                  </ListItem>\n                </Link> \n                :\n                <Link to=\"/favorites\">\n                <ListItem button key={text}>\n                  <ListItemIcon><FavoriteIcon /></ListItemIcon>\n                  <ListItemText primary={text} />\n                </ListItem>\n              </Link> \n              ))}\n            </List>\n          </Grid>\n          <Grid item xs={4} className={classes.gridDrawerFooter}>\n            <List className={classes.gridDrawerFooterList}>\n              <Divider className={classes.divider}/>\n              {['Perfil', 'Logout'].map((text, index) => (\n                index % 2 === 0 ? \n                <Link to=\"/login\">\n                  <ListItem button key={text}>\n                    <ListItemIcon>\n                      <AccountCircleIcon />\n                    </ListItemIcon>\n                    <ListItemText primary={text} />\n                  </ListItem>\n                </Link>\n                : \n                <Link to=\"/logout\">\n                  <ListItem button key={text}>\n                    <ListItemIcon>\n                      <ExitToAppIcon />\n                    </ListItemIcon>\n                    <ListItemText primary={text} />\n                  </ListItem>\n                </Link>\n              ))}\n            </List>\n          </Grid>\n        </Grid>\n      </Drawer>\n    </div>\n  );\n}","/home/agl/Gits/orulo/frontend/src/assets/styles/components/customDrawer.jsx",[],"/home/agl/Gits/orulo/frontend/src/pages/login.jsx",[],"/home/agl/Gits/orulo/frontend/src/libs/authService.js",[],"/home/agl/Gits/orulo/frontend/src/assets/styles/pages/login.jsx",["91"],"import { colors } from '../base'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\n\nconst drawerWidth = 187;\n\nconst loginStyle = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n    marginTop: \"10%\",\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n    position: \"relative\",\n    top: \"12%\",\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport { loginStyle, useTheme }","/home/agl/Gits/orulo/frontend/src/libs/handleStorage.js",["92"],"class HandleStorage {\n  constructor() {}\n\n  static clearStorage() {\n    localStorage.clear()\n  }\n\n  static getStorage() {\n    return({\n      \"user\": JSON.parse(localStorage.getItem('user')),\n      \"token\": localStorage.getItem('token'),\n      \"favorites\": JSON.parse(localStorage.getItem('favorites'))\n    })\n  }\n\n  static setStorage(data, action) {\n    if(action === \"user\")\n      localStorage.setItem('user', JSON.stringify(data));\n    if(action === \"token\")\n      localStorage.setItem('token', data);\n    if(action === \"favorites\") {\n      const f = localStorage.getItem('favorites')\n      if(f) {\n        const a = JSON.parse(f);\n        a.push(data)\n        localStorage.setItem('favorites', JSON.stringify(a))\n      }\n      else\n        localStorage.setItem('favorites', JSON.stringify([data]))\n    }\n  }  \n};\n\nexport default HandleStorage;","/home/agl/Gits/orulo/frontend/src/pages/signup.jsx",[],"/home/agl/Gits/orulo/frontend/src/components/panelSliders.jsx",["93","94","95","96"],"import React, { useRef, useEffect } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n// import Slider from '@material-ui/core/Slider';\n// import Typography from '@material-ui/core/Typography';\n\nimport { panelSlidersStyle, useTheme } from \"../assets/styles/components/panelSliders\"\nimport OruloAPI from \"../libs/oruloAPI\"\n// import SliderData from \"../assets/data/slider\"\nimport CustomCard from \"../components/customCard\"\n\nimport { withStyles } from '@material-ui/core/styles'\n\nexport default function PanelSlider() {\n  const classes = panelSlidersStyle();\n  const [city, setCity] = React.useState(false);\n  const [state, setState] = React.useState(false);\n  const [buildings, setBuildings] = React.useState(false);\n  const isInitialMount = useRef(true);\n  const oruloAPI = new OruloAPI();\n\n  useEffect(() => {\n    if (isInitialMount.current) {\n      oruloAPI.showList().then((s) => setBuildings(s.data.buildings))\n      isInitialMount.current = false;\n    } else {\n      // oruloAPI.showList().then((s) => setBuildings(s))\n    }\n  });\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n\n// const oruloAPI = new OruloAPI();\n  // oruloAPI.showList().then((s) => console.log(s))\n  }\n\n  return (\n    <div className={classes.rootABC}>\n      <Paper >\n        <form noValidate onSubmit={handleSubmit}>\n          <Grid container   justify=\"center\" alignItems=\"center\" spacing={1} className={classes.paperRoot}>\n            {/* ROW ONE */}\n            <Grid item xs={12} sm={10} classes={classes.gridItem}>\n                <TextField\n                id=\"standard-full-width\"\n                label=\"Cidade\"\n                className = {classes.textField}\n                placeholder=\"Porto Alegre\"\n                fullWidth\n                margin=\"normal\"\n                onChange={event => setCity(event.target.value)}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} sm={2} classes={classes.gridItem}>\n                <TextField\n                id=\"standard-full-width\"\n                label=\"Estado\"\n                className = {classes.textField}\n                placeholder=\"RS\"\n                helperText=\"Apenas siglas do estado!\"\n                margin=\"normal\"\n                onChange={event => setState(event.target.value)}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n            > \n              Pesquisar \n            </Button>\n          </Grid>\n        </form>\n      </Paper>\n      <Grid container className={classes.rootGridCards}>\n          {\n            buildings &&\n            buildings.map((item) => {\n              return (\n              <Grid item xs={12} sm={4}>\n                <CustomCard build={item}/>\n              </Grid> \n              )\n            })\n          }\n      </Grid>\n    </div>\n  );\n}","/home/agl/Gits/orulo/frontend/src/assets/styles/components/panelSliders.jsx",[],"/home/agl/Gits/orulo/frontend/src/libs/oruloAPI.js",[],"/home/agl/Gits/orulo/frontend/src/env.js",[],"/home/agl/Gits/orulo/frontend/src/assets/data/slider.js",[],"/home/agl/Gits/orulo/frontend/src/components/customCard.jsx",["97","98"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport HandleStorage from '../libs/handleStorage';\nimport AuthService from '../libs/authService';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 350,\n    minHeight: 500,\n    padding: \"5px\",\n    margin: \"20px\",\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\n\nexport default function CustomCard({build}) {\n  // console.log(build)\n\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const handleFavoriteButton = () => {\n    const isLogged = HandleStorage.getStorage()[\"token\"]\n    const auth = new AuthService();\n    \n    if(!isLogged) {\n      alert(\"Necessario estar logado para salvar como favorito, se nÃ£o possui uma conta, Ã© facil criar uma, sÃ³ clica em perfil e depois em signup\")\n      return;\n    }\n\n    auth.saveFavorite(build).then(s => console.log(s));\n  }\n\n  return (\n    build !== undefined ? \n    <Card className={classes.root}>\n      <CardHeader\n        action={\n          <IconButton aria-label=\"settings\">\n            <MoreVertIcon />\n          </IconButton>\n        }\n        title={build.name}\n        subheader={build.finality}\n      />\n      <CardMedia\n        className={classes.media}\n        image={build[\"default_image\"] ? build[\"default_image\"][\"520x280\"] : false}\n        title=\"Paella dish\"\n      />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          Price: {build[\"min_price\"]} <br />\n          Area: {build[\"max_area\"]} <br />\n          Quartos: {build[\"max_bedrooms\"]} <br />\n          Banheiros: {build[\"max_bathrooms\"]} <br />\n          Garagem: {build[\"max_parking\"]} <br />\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton aria-label=\"add to favorites\" onClick={handleFavoriteButton}>\n          <FavoriteIcon />\n        </IconButton>\n        <IconButton\n          className={clsx(classes.expand, {\n            [classes.expandOpen]: expanded,\n          })}\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n        >\n          <ExpandMoreIcon />\n        </IconButton>\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <Typography paragraph>\n           {build.description}\n          </Typography>\n          {/* <Typography paragraph>\n            Heat oil in a (14- to 16-inch) paella pan or a large, deep skillet over medium-high\n            heat. Add chicken, shrimp and chorizo, and cook, stirring occasionally until lightly\n            browned, 6 to 8 minutes. Transfer shrimp to a large plate and set aside, leaving chicken\n            and chorizo in the pan. Add pimentÃ³n, bay leaves, garlic, tomatoes, onion, salt and\n            pepper, and cook, stirring often until thickened and fragrant, about 10 minutes. Add\n            saffron broth and remaining 4 1/2 cups chicken broth; bring to a boil.\n          </Typography>\n          <Typography paragraph>\n            Add rice and stir very gently to distribute. Top with artichokes and peppers, and cook\n            without stirring, until most of the liquid is absorbed, 15 to 18 minutes. Reduce heat to\n            medium-low, add reserved shrimp and mussels, tucking them down into the rice, and cook\n            again without stirring, until mussels have opened and rice is just tender, 5 to 7\n            minutes more. (Discard any mussels that donâ€™t open.)\n          </Typography>\n          <Typography>\n            Set aside off of the heat to let rest for 10 minutes, and then serve.\n          </Typography> */}\n        </CardContent>\n      </Collapse>\n    </Card>\n    :\n    false\n  );\n}","/home/agl/Gits/orulo/frontend/src/pages/favorites.jsx",["99","100","101","102"],"import React from 'react';\nimport clsx from 'clsx';\nimport Typography from '@material-ui/core/Typography';\n\nimport { loginStyle } from \"../assets/styles/pages/login\"\nimport CustomDrawer from \"../components/customDrawer\"\nimport AuthService from \"../libs/authService\"\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\n\nexport default function Favorites() {\n  const classes = loginStyle();\n  const [open, setOpen] = React.useState(false);\n\n  const hook = {\n    open: open,\n    handleDrawerOpen: () => {\n      setOpen(true);\n    },\n    handleDrawerClose: () => {\n      setOpen(false);\n    },\n  }\n\n\n  return (\n    <div className={classes.root}>\n      <CustomDrawer hook = {hook} usePanelFavorites={true}/>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        {/* <Container component=\"main\" maxWidth=\"xs\"> */}\n        {/* <CssBaseline />\n        <div className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\">\n            Favorites\n          </Typography>\n        </div> */}\n      {/* </Container> */}\n      </main>\n    </div>\n  );\n}","/home/agl/Gits/orulo/frontend/src/components/panelFavorites.jsx",["103","104","105","106","107","108","109"],"import React, { useRef, useEffect } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n// import Slider from '@material-ui/core/Slider';\n// import Typography from '@material-ui/core/Typography';\n\nimport { panelSlidersStyle, useTheme } from \"../assets/styles/components/panelSliders\"\nimport OruloAPI from \"../libs/oruloAPI\"\n// import SliderData from \"../assets/data/slider\"\nimport CustomCard from \"./customCard\"\nimport HandleStorage from '../libs/handleStorage';\n\nimport { withStyles } from '@material-ui/core/styles'\n\nexport default function PanelSlider() {\n  const classes = panelSlidersStyle();\n  const [buildings, setBuildings] = React.useState(false);\n  const storage = HandleStorage.getStorage()\n  const isInitialMount = useRef(true);\n  const oruloAPI = new OruloAPI();\n\n  useEffect(() => {\n    if (isInitialMount.current) {\n      if(storage[\"favorites\"])\n        setBuildings(storage[\"favorites\"])\n      isInitialMount.current = false;\n    } else {\n      // oruloAPI.showList().then((s) => setBuildings(s))\n    }\n  });\n\n  return (\n    <div className={classes.rootABC}>\n      { \n      !storage[\"user\"] ?\n      <h1 style={{color: 'black'}}>Necessario estar logado para ter acesso a favoritos</h1>\n      :\n      <Grid container className={classes.rootGridCards}>\n          {\n            buildings &&\n            buildings.map((item) => {\n              return (\n              <Grid item xs={12} sm={4} className={classes.itemGridCards}>\n                <CustomCard build={item}/>\n              </Grid> \n              )\n            })\n          }\n      </Grid> \n      }\n    </div>\n  );\n}",{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":7,"column":3,"nodeType":"116","messageId":"117","endLine":7,"endColumn":7},{"ruleId":"114","severity":1,"message":"118","line":34,"column":9,"nodeType":"116","messageId":"117","endLine":34,"endColumn":13},{"ruleId":"114","severity":1,"message":"119","line":1,"column":10,"nodeType":"116","messageId":"117","endLine":1,"endColumn":16},{"ruleId":"120","severity":1,"message":"121","line":2,"column":3,"nodeType":"122","messageId":"123","endLine":2,"endColumn":19},{"ruleId":"114","severity":1,"message":"124","line":9,"column":29,"nodeType":"116","messageId":"117","endLine":9,"endColumn":37},{"ruleId":"114","severity":1,"message":"125","line":14,"column":10,"nodeType":"116","messageId":"117","endLine":14,"endColumn":20},{"ruleId":"114","severity":1,"message":"126","line":18,"column":10,"nodeType":"116","messageId":"117","endLine":18,"endColumn":14},{"ruleId":"114","severity":1,"message":"127","line":19,"column":10,"nodeType":"116","messageId":"117","endLine":19,"endColumn":15},{"ruleId":"114","severity":1,"message":"128","line":10,"column":8,"nodeType":"116","messageId":"117","endLine":10,"endColumn":14},{"ruleId":"114","severity":1,"message":"129","line":15,"column":8,"nodeType":"116","messageId":"117","endLine":15,"endColumn":17},{"ruleId":"114","severity":1,"message":"130","line":3,"column":8,"nodeType":"116","messageId":"117","endLine":3,"endColumn":18},{"ruleId":"114","severity":1,"message":"131","line":7,"column":8,"nodeType":"116","messageId":"117","endLine":7,"endColumn":19},{"ruleId":"114","severity":1,"message":"132","line":9,"column":8,"nodeType":"116","messageId":"117","endLine":9,"endColumn":19},{"ruleId":"114","severity":1,"message":"133","line":10,"column":8,"nodeType":"116","messageId":"117","endLine":10,"endColumn":17},{"ruleId":"114","severity":1,"message":"134","line":2,"column":8,"nodeType":"116","messageId":"117","endLine":2,"endColumn":13},{"ruleId":"114","severity":1,"message":"135","line":4,"column":8,"nodeType":"116","messageId":"117","endLine":4,"endColumn":17},{"ruleId":"114","severity":1,"message":"136","line":5,"column":8,"nodeType":"116","messageId":"117","endLine":5,"endColumn":14},{"ruleId":"114","severity":1,"message":"124","line":9,"column":29,"nodeType":"116","messageId":"117","endLine":9,"endColumn":37},{"ruleId":"114","severity":1,"message":"125","line":15,"column":10,"nodeType":"116","messageId":"117","endLine":15,"endColumn":20},{"ruleId":"114","severity":1,"message":"137","line":22,"column":9,"nodeType":"116","messageId":"117","endLine":22,"endColumn":17},{"ruleId":"138","severity":1,"message":"139","line":24,"column":3,"nodeType":"116","endLine":24,"endColumn":12,"suggestions":"140"},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'colors' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'useTheme' is defined but never used.","'withStyles' is defined but never used.","'city' is assigned a value but never used.","'state' is assigned a value but never used.","'Avatar' is defined but never used.","'ShareIcon' is defined but never used.","'Typography' is defined but never used.","'AuthService' is defined but never used.","'CssBaseline' is defined but never used.","'Container' is defined but never used.","'Paper' is defined but never used.","'TextField' is defined but never used.","'Button' is defined but never used.","'oruloAPI' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setBuildings'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [storage] as a second argument to the useEffect Hook.",["143"],"no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},"Add dependencies array: [storage]",{"range":"146","text":"147"},[1173,1173],", [storage]"]